#!/usr/bin/env ruby
# frozen_string_literal: true

puts(__FILE__)

require 'openssl'
require 'socket'

require_relative '../lib/reactor'
require_relative '../lib/handlers/accept'

key = OpenSSL::PKey::RSA.new(4096)
ca_name = OpenSSL::X509::Name.parse('CN=ca/DC=example')

cert = OpenSSL::X509::Certificate.new
cert.issuer = ca_name
cert.not_after = Time.now + 86_400
cert.not_before = Time.now
cert.public_key = key.public_key
cert.serial = 0
cert.subject = ca_name
cert.version = 2
cert.sign(key, OpenSSL::Digest::SHA1.new)

context = OpenSSL::SSL::SSLContext.new
context.key = key
context.cert = cert

tcp_server = TCPServer.new(ENV.fetch('HOST'), ENV.fetch('PORT').to_i)
ssl_server = OpenSSL::SSL::SSLServer.new(tcp_server, context)

Reactor.register(
  io: ssl_server,
  mode: :read,
  handler: :accept
)

Reactor.start

trap('INT') do
  puts 'Shutting down...'
  exit
end

$STDERR.flush
sleep
